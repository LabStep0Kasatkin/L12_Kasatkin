# from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
# from aiogram.types import KeyboardButton, InlineKeyboardButton

# # –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
# def get_main_keyboard(is_admin: bool = False):
#     builder = ReplyKeyboardBuilder()
#     builder.add(KeyboardButton(text="–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É"))
#     builder.add(KeyboardButton(text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"))
#     if is_admin:
#         builder.add(KeyboardButton(text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"))
#     return builder.as_markup(resize_keyboard=True)

# # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
# def gender_keyboard():
#     builder = ReplyKeyboardBuilder()
#     builder.add(KeyboardButton(text="–ú—É–∂—Å–∫–æ–π"))
#     builder.add(KeyboardButton(text="–ñ–µ–Ω—Å–∫–∏–π"))
#     return builder.as_markup(resize_keyboard=True, one_time_keyboard=True)

# # Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —á–∞—Å–æ–≤
# def time_hour_keyboard():
#     builder = InlineKeyboardBuilder()
#     for hour in range(0, 24):
#         builder.add(InlineKeyboardButton(text=str(hour), callback_data=f"hour_{hour}"))
#     builder.adjust(4)
#     return builder.as_markup()

# # Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–∏–Ω—É—Ç
# def time_minute_keyboard():
#     builder = InlineKeyboardBuilder()
#     for minute in range(0, 60, 5):
#         builder.add(InlineKeyboardButton(text=str(minute), callback_data=f"minute_{minute}"))
#     builder.adjust(5)
#     return builder.as_markup()


from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def get_main_keyboard(is_admin=False):
    buttons = [
        [KeyboardButton(text="–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É")],
        [KeyboardButton(text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")]
    ]
    if is_admin:
        buttons.append([KeyboardButton(text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")])
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
gender_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ú—É–∂—Å–∫–æ–π"), KeyboardButton(text="–ñ–µ–Ω—Å–∫–∏–π")]
    ],
    resize_keyboard=True,
    one_time_keyboard=True
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —á–∞—Å–∞–º–∏ (0-23)
def get_hour_kb():
    buttons = []
    row = []
    for h in range(0, 24):
        row.append(KeyboardButton(text=str(h)))
        if len(row) == 6:
            buttons.append(row)
            row = []
    if row:
        buttons.append(row)
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True, one_time_keyboard=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –º–∏–Ω—É—Ç–∞–º–∏ (0-59, —à–∞–≥ 5)
def get_minute_kb():
    buttons = []
    row = []
    for m in range(0, 60, 5):
        row.append(KeyboardButton(text=str(m)))
        if len(row) == 6:
            buttons.append(row)
            row = []
    if row:
        buttons.append(row)
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True, one_time_keyboard=True)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –¥–ª—è –ø–æ–≥–æ–¥—ã
def get_weather_smile(temp_c):
    if temp_c < 0:
        return "‚ùÑÔ∏è"
    elif 0 <= temp_c < 15:
        return "üß•"
    elif 15 <= temp_c < 25:
        return "üå§Ô∏è"
    else:
        return "üî•"
